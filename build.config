function gen_headers() {
    # install headers for android headers parser
    (
        cd ${OUT_DIR}
        make O=${OUT_DIR} headers_install
    )
}

function tar_modules() {
    # tar up modules
    (
        set +x
        echo " Archiving kernel module files"
        MODULES=$(find ${MODULES_STAGING_DIR} -type f -name "*.ko")
        if [ -n "${MODULES}" ]; then
          mkdir -p ${DIST_DIR}
          rm -f ${DIST_DIR}/kernel-modules.tar.gz
          for FILE in ${MODULES}; do
            echo "  ${FILE##*/}"
            tar -rf ${DIST_DIR}/kernel-modules.tar -C ${FILE%/*} ${FILE##*/}
          done
          gzip -9 ${DIST_DIR}/kernel-modules.tar
        fi
        set -x
    )
}

function make_dtbo() {
    #make dtbo image
    (
        set +x
        DTBO_DIR=$OUT_DIR/arch/arm/boot/dts
        DTBO_OBJS=$(find ${DTBO_DIR} -name "*.dtbo")
        DTBOIMAGE=${DIST_DIR}/dtbo.img
        ${MKDTIMG_PREBUILTS_BIN}/mkdtboimg.py create ${DTBOIMAGE} ${DTBO_OBJS}
        set -x
    )
}

ARCH=arm
BRANCH=android-msm-rover-4.9
CROSS_COMPILE=arm-linux-androidkernel-
DEFCONFIG=rover_defconfig
EXTRA_CMDS=''
KERNEL_DIR=private/msm-mobvoi-cw
AUDIO_MODULE_DIR=private/msm-mobvoi-cw/techpack/audio
POST_DEFCONFIG_CMDS="check_defconfig;gen_headers"
LINUX_GCC_CROSS_COMPILE_PREBUILTS_BIN=prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/bin
MKDTIMG_PREBUILTS_BIN=prebuilts/kernel-build-tools/linux-x86/bin
DTC_PREBUILTS_BIN=prebuilts/kernel-build-tools/linux-x86/bin
DTC_EXT=dtc
CONFIG_BUILD_ARM64_DT_OVERLAY=y
FILES="
arch/arm/boot/zImage-dtb
vmlinux
System.map
"
IN_KERNEL_MODULES=1
EXT_MODULES="
"
EXTRA_CMDS="tar_modules;make_dtbo"
